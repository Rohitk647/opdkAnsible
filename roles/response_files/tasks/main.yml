---
- name: Set tasks facts
  set_fact:
    response_path: "{{ playbook_dir }}/reports/{{ planet }}/response_files"    

- name: Creates response dir if it doesn't exist
  file:
    path: "{{ response_path }}"
    state: directory  

- name: response template
  delegate_to: localhost
  vars:
    region: "{{ item }}"
    region_index: "{{ item[-1] }}"
  template:
    src: response.cfg.j2
    dest: "{{ response_path }}/response_{{ planet }}_{{ item }}.cfg"
  with_items:
    - "{{ regions.split(',') }}"

- name: Provision template
  delegate_to: localhost
  vars:
    region: "{{ item }}"
  template:
    src: response_provision.cfg.j2
    dest: "{{ response_path }}/response_{{ planet }}_{{ item }}_provision.cfg"
  with_items:
    - "{{ regions.split(',') }}"

- name: Creates response dir if it doesn't exist
  file:
    path: "{{ playbook_dir }}/reports/{{ planet }}/response_files"
    state: directory
  tags: devportal
    
- name: dev portal response file
  delegate_to: localhost
  vars:
    region: "{{ item }}"
  template:
    src: response_devportal.cfg.j2
    dest: "{{ playbook_dir }}/reports/{{ planet }}/response_files/response_{{ planet }}_{{ item }}_devportal.cfg"
  tags: devportal
  with_items:
    - "{{ regions.split(',') }}"
  
- name: dev portal postgres response file
  delegate_to: localhost
  vars:
    region: "{{ item }}"
  template:
    src: response_devportal_postgres.cfg.j2
    dest: "{{ playbook_dir }}/reports/{{ planet }}/response_files/response_{{ planet }}_{{ item }}_devportal_postgres.cfg"
  tags: devportal
  with_items:
    - "{{ regions.split(',') }}"
